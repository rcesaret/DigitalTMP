# ===================================================================
# Python Project Tooling Configuration
# ===================================================================
# Centralized configuration for linters, formatters, and testing tools.
# For more information on pyproject.toml: https://pip.pypa.io/en/stable/reference/build-system/pyproject-toml/

[tool.ruff]
# Ruff configuration: https://docs.astral.sh/ruff/configuration/
# Set the Python version to target. This is based on your `base_project_env.yml`.
target-version = "py311"
line-length = 88
# Match Black's default line length
# Exclude common directories from linting.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
    "node_modules",
    "venv",
    # Project-specific exclusions
    "knowledge_base",
    "large_files_for_dropbox_download",
    ".windsurf",
    ".cursor",
    ".idea",
    "project_materials",
]

[tool.ruff.lint]
# Define the set of rules to use.
# E/W = pycodestyle errors/warnings
# F = Pyflakes
# I = isort (import sorting)
# N = pep8-naming
# B = flake8-bugbear
select = ["E", "F", "W", "I", "N", "B"]
ignore = ["E501"]  # Line length handled by formatter

# Ruff formatter configuration
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

# Radon configuration
[tool.radon]
exclude = "knowledge_base/*,large_files_for_dropbox_download/*,.windsurf/*"
cc_min = "C"  # Minimum complexity grade
mi_min = "B"  # Minimum maintainability index

# Detect-secrets configuration
[tool.detect-secrets]
exclude_files = "knowledge_base/.*|large_files_for_dropbox_download/.*|\\.windsurf/.*|\\.cursor/.*"
